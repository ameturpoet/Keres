/********************************************************
*
*File:      NavigationPoint
*Author:    Alex DeJardin
*Description:
    Contains the weight of this pathing node and pointers 
    to the connected nodes 
    
*Other Contributors:
    
********************************************************/
class NavigationPoint : ZilchComponent
{
    [Dependency]
    var NavigationEvents : NavigationEvents = null;
    [Property]
    var FortyFiveCorner : Boolean = false;
    var Weight : Integer = 0;
    [Property]
    var Touched : Boolean = false;
    var NearEnemy: Boolean = false;
    [Serialized]
    var NearPoints : Array[Cog] = null;
    var Done : Boolean = true;
    var Index : Real = 0.0;
    var Index2D : Real2 = Real2(0, 0);
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, "ConnectTiles", this.SetNearbyPoints);
        Zero.Connect(this.Space, "Start45Corners", this.ForwardIfFortyFive);
        Zero.Connect(this.Space, Events.LogicUpdate, this.SetNearbyWeight);
        this.NearPoints = new Array[Cog]();
    }
    
    //Searches for all floor tiles adjacent to the current tile and saves them as references
    //Only runs once
    //
    function SetNearbyPoints(event : GeometryStartEvent)
    {
        //Console.WriteLine("-----");
        //Console.WriteLine(this.Owner.Transform.Translation);
        var geometry : Cog = null;
        if (this.Owner.Parent.Name == "LevelGeometry")
        {
            geometry = this.Owner.Parent;
        }
        else
        {
            geometry = this.Owner.Parent.Parent;
        }
        
        var worldTranslation = this.Owner.Transform.WorldTranslation;
        
        var sr = new StringBuilder();
        
        sr.WriteLine(this.Index2D);
        
        this.Owner.FindChildByName("FloorText").SpriteText.Text = sr.ToString();
        
        if (this.Owner.Parent.Name != "LevelGeometry")
        {
            worldTranslation = this.Owner.Parent.Transform.WorldTranslation;
        }
        
        
        
        var tempObject = geometry.TileArray2D.GetTileAt(this.Index2D, Real3(1, 0, 0));
        if (tempObject.Name == "Floor")
        {
            this.NearPoints.Add(tempObject);
        }
        
        tempObject = geometry.TileArray2D.GetTileAt(this.Index2D, Real3(-1, 0, 0));
        if (tempObject.Name == "Floor")
        {
            this.NearPoints.Add(tempObject);
        }
        
        tempObject = geometry.TileArray2D.GetTileAt(this.Index2D, Real3(0, 1, 0));
        if (tempObject.Name == "Floor")
        {
            this.NearPoints.Add(tempObject);
        }
        
        tempObject = geometry.TileArray2D.GetTileAt(this.Index2D, Real3(0, -1, 0));
        if (tempObject.Name == "Floor")
        {
            this.NearPoints.Add(tempObject);
        }
    }
    
    function ForwardIfFortyFive(event : Geometry45Event)
    {
        this.NearPoints.Get(0).NavigationPoint.NearPoints.RemoveFirst(this.Owner);
        this.NearPoints.Get(0).NavigationPoint.NearPoints.Add(this.NearPoints.Get(1));
        this.NearPoints.Get(1).NavigationPoint.NearPoints.RemoveFirst(this.Owner);
        this.NearPoints.Get(1).NavigationPoint.NearPoints.Add(this.NearPoints.Get(0));
    }
    
    //Updates the pathing weight of all nearby tiles
    //
    function SetNearbyWeight(event : UpdateEvent)
    {
        //var st = new StringBuilder();
        //st.WriteLine(this.Index);
        //this.Owner.FindChildByName("FloorText").SpriteText.Text = st.ToString();
        
        if (!this.Done && !this.FortyFiveCorner)
        {
            foreach (var ti in this.NearPoints)
            {
                if (ti.NavigationPoint.Weight == 0)
                {
                    ti.NavigationPoint.Weight = this.Weight + 1;
                    
                    var sr = new StringBuilder();
                    
                    sr.Write(this.Weight + 1);
                    sr.Write(":");
                    sr.WriteLine(this.Index);
                    
                    
                    ti.FindChildByName("FloorText").SpriteText.Text = sr.ToString();
                    
                    if (this.NearEnemy)
                    {
                        ti.NavigationPoint.Done = true;
                    }
                    else
                    {
                        ti.NavigationPoint.Done = false;
                    }
                }
            }
            this.Done = true;
        }
    }
    
}
