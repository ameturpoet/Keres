class Oxygen : ZilchComponent
{
    [Property]
    var MaxOxygen : Integer = 100;
    
    [Property]
    var HeavyBreathingRate : Real = 2;
    
    var Oxygen : Real = 1;
    
    function Initialize(init : CogInitializer)
    {
        this.Oxygen = this.MaxOxygen;
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if (!this.Owner.PlayerStats.DebugMode)
        {
            if(this.Owner.PlayerControl_Move.BreathingHeavy)
            {
                this.Owner.PlayerStats.Oxygen -= (event.Dt * this.HeavyBreathingRate);
                //While sprinting, increase the depletion of oxygen by the heavy breathing rate
            }
            else
            {
                this.Owner.PlayerStats.Oxygen -= event.Dt;
                //Otherwise, decrease oxygen at a rate of one unit per second
            }
            
            if(this.Owner.PlayerStats.Oxygen <= 0 && !this.Owner.PlayerStats.Indestructable)
            {
                this.Owner.PlayerStats.Life = 0;
                this.Owner.PlayerStats.Oxygen = 0.0;
                this.Space.LoadLevel(Level.Find("DeathScreen"));
                //If the player runs out of oxygen, load the death screen
            }
            
            if (Zero.Keyboard.KeyIsPressed(this.Owner.Controller.RefillOxygen))
            {
                if(this.Owner.Inventory.HasItem("OxygenTank") || this.Owner.PlayerStats.Indestructable)
                {
                    this.Owner.PlayerStats.Oxygen = this.MaxOxygen;
                    this.Owner.Inventory.DeleteItem("OxygenTank");
                    this.Owner.PlayerControl_Move.UpdateO2(-1);
                }
                else
                {
                    //Out of oxygen tanks sound goes here
                }
            }
        }
    }
    
}
