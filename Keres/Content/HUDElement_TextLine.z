class HUDElement_TextLine : ZilchComponent
{
    var LineNumber : Integer = 1;
    var LineHeight : Real3 = Real3(0, 0, 0);
    
    function Initialize(init : CogInitializer)
    {
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    //Moves the lines of text up and kills the ones that exceed the number of lines allotted
    //
    function IncrementLine(maxLines : Integer)
    {
        this.LineNumber += 1;
        if (this.LineNumber > maxLines)
        {
            this.Owner.Destroy();
        }
        this.LineHeight = Real3(0, this.Owner.SpriteText.MeasureText().Y + 0.05, 0);
        this.Owner.Transform.Translation += this.LineHeight;
    }
    
    function IncrementLineItem()
    {
        this.LineHeight = Real3(0, this.Owner.Sprite.SpriteSource.GetSize().X * this.Owner.Transform.Scale.Y + 0.05, 0);
        this.Owner.Transform.Translation += this.LineHeight;
    }
    
    function DecrementLineItem()
    {
        this.Owner.Transform.Translation -= this.LineHeight;
    }
}
