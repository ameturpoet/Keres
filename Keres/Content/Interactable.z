class Interactable : ZilchComponent
{
    [Property]
    var ShowTooltip : Boolean = true;
    [Property]
    var Tooltip : String = null;
    
    [Property]
    var ShowControl : Boolean = true;
    
    function Initialize(init : CogInitializer)
    {
        if (this.Owner.Interactable_Gate != null && this.Owner.Interactable_Gate.PlayerCantOpen)
        {
            this.ShowTooltip = false;
        }
    }

    //Actives the interactable object, resulting in different outcomes based on what scripts are attached to it
    //E.g., an Interactable_Gate will open, an Item will be added to the player's inventory, etc.
    //The parameter is whether it's being manually activated (by the player) or automatically activated
    //(by an activator object)
    function Activate(manual : Boolean)
    {
        //GATE
        if (this.Owner.Interactable_Gate != null)
        {
            if (!manual || this.Owner.Interactable_Gate.Key == "" || !this.Owner.Interactable_Gate.Locked)
            {
                this.Owner.Interactable_Gate.Toggle();
            }
            else
            {
                var player = this.Owner.Space.FindObjectByName("Player");
                if (player.Inventory.HasItem(this.Owner.Interactable_Gate.Key))
                {
                    this.Owner.Interactable_Gate.Toggle();
                    this.Owner.Interactable_Gate.Locked = false;
                    this.Owner.Soundbox_Door.PlayUnlock();
                    player.PlayerControl_Move.TextLog.HUDElement_TextLog.AddLine(String.Concatenate("Door opened with the ", player.Inventory.GetItemName(this.Owner.Interactable_Gate.Key)));
                    
                    if (player.Inventory.GetItemReference(this.Owner.Interactable_Gate.Key).Item_Key.OneUse)
                    {
                        player.Inventory.DeleteItem(this.Owner.Interactable_Gate.Key);
                        player.PlayerControl_Move.ItemLog.HUDElement_TextLog.ClearLine(this.Owner.Interactable_Gate.Key);
                    }
                }
                else
                {
                    player.PlayerControl_Move.TextLog.HUDElement_TextLog.AddLine("This door is locked and requires a key");
                }
            }
        }
        //PISTON
        else if (this.Owner.Interactable_Piston != null)
        {
            if (!manual || !this.Owner.Interactable_Piston.PlayerCantUse)
            {
                this.Owner.Interactable_Piston.Toggle();
            }
        }
        //LEVER
        else if (this.Owner.Activator_Lever != null)
        {
            this.Owner.Activator_Lever.Activate();
        }
        //BUTTON
        else if (this.Owner.Activator_PushButton != null)
        {
            this.Owner.Activator_PushButton.Activate();
        }
        //MULTISWITCH
        else if (this.Owner.Activator_Multiswitch != null)
        {
            this.Owner.Activator_Multiswitch.Activate();
        }
        //SUBSWITCH
        else if (this.Owner.Activator_SubSwitch != null)
        {
            this.Owner.Activator_SubSwitch.Activate();
        }
        //ITEM
        else if (this.Owner.Item != null)
        {
            var player = this.Owner.Space.FindObjectByName("Player");
            player.Inventory.PickUpItem(this.Owner);
            
            //Handles behaviour based on the type of item
            if (this.Owner.Item_Key != null)
            {
                player.Soundbox_Player.PlayPickupKey();
            }
            else if (this.Owner.Item_OxygenTank != null)
            {
                player.PlayerControl_Move.UpdateO2(0);
                player.Soundbox_Player.PlayPickupOxyTank();
            }
            else if (this.Owner.Item_Battery != null)
            {
                player.Soundbox_Player.PlayPickupKey();
            }
            
            if (this.Owner.Item.NameStartsWithVowel)
            {
                player.PlayerControl_Move.TextLog.HUDElement_TextLog.AddLine(String.Concatenate("Picked up an ", this.Owner.Item.Name));
            }
            else
            {
                player.PlayerControl_Move.TextLog.HUDElement_TextLog.AddLine(String.Concatenate("Picked up a ", this.Owner.Item.Name));
            }
        }
        //ALARM
        else if (this.Owner.Interactable_Alarm != null)
        {
            if (!manual || this.Owner.Interactable_Alarm.ManuallyActivated)
            {
                this.Owner.Interactable_Alarm.Activate();
            }
        }
    }
}
