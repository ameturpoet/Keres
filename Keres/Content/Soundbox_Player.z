class Soundbox_Player : ZilchComponent
{
    [Property]
    var Footsteps : SoundCue = null;
    [Property]
    var Damaged : SoundCue = null;
    [Property]
    var PickupKey : SoundCue = null;
    [Property]
    var PickupTank : SoundCue = null;
    [Property]
    var ShootTaser : SoundCue = null;
    [Property]
    var TaserReload1 : SoundCue = null;
    [Property]
    var TaserReload2 : SoundCue = null;
    [Property]
    var TaserReload3 : SoundCue = null;
    [Property]
    var FallPart1 : SoundCue = null;
    [Property]
    var FallPart2 : SoundCue = null;
    
    function Initialize(init : CogInitializer)
    {
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }
    
    function PlayFall1()
    {
        this.Owner.SoundEmitter.PlayCue(this.FallPart1);
    }
    
    function PlayFall2()
    {
        this.Owner.SoundEmitter.PlayCue(this.FallPart2);
    }

    function PlayGunshot()
    {
        this.Owner.SoundEmitter.PlayCue(this.ShootTaser);
    }

    function PlayFootstep()
    {
        this.Owner.SoundEmitter.PlayCue(this.Footsteps);
    }
    
    function PlayHit()
    {
        this.Owner.SoundEmitter.PlayCue(this.Damaged);
    }
    
    function PlayPickupKey()
    {
        this.Owner.SoundEmitter.PlayCue(this.PickupKey);
    }
    
    function PlayPickupOxyTank()
    {
        this.Owner.SoundEmitter.PlayCue(this.PickupTank);
    }
    
    //Plays the indicated step in the reload sound (1=Click, 2=Battery Out, 3=Battery In)
    function PlayReload(step : Integer)
    {
        if (step == 1)
        {
            this.Owner.SoundEmitter.PlayCue(this.TaserReload1);
        }
        else if (step == 2)
        {
            this.Owner.SoundEmitter.PlayCue(this.TaserReload2);
        }
        else if (step == 3)
        {
            this.Owner.SoundEmitter.PlayCue(this.TaserReload3);
        }
    }
}
