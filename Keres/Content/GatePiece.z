/********************************************************
*
*File:      GatePiece
*Author:    Alex DeJardin
*Description:
    Updates the state of sections of a gate
    
*Other Contributors:
    
********************************************************/
enum OpenType { MoveLeft, MoveRight, SwingLeft, SwingRight }

class GatePiece : ZilchComponent
{
    [Property]
    var TypeOfDoor : OpenType = OpenType.MoveRight;
    [Property]
    var OpenDistance : Real = 1.0;
    [Property]
    var OpenAngle : Real = 90.0;
    [Property]
    var Initialized : Boolean = false;
    [Property]
    var StartingLocation : Real3 = Real3(0, 0, 0);
    
    function Initialize(init : CogInitializer)
    {
        if (!this.Initialized)
        {
            this.StartingLocation = this.Owner.Transform.Translation;
            this.Initialized = true;
        }
        this.Owner.Interactable.Tooltip = this.Owner.Parent.Interactable.Tooltip;
        this.Owner.Interactable.ShowTooltip = this.Owner.Parent.Interactable.ShowTooltip;
        this.Owner.Interactable.ShowControl = this.Owner.Parent.Interactable.ShowControl;
    }
    
    function SetToOpen()
    {
        this.SetOpenPosition(1.0);
    }
    
    function SetToClosed()
    {
        this.SetOpenPosition(0.0);
    }
    
    function Activate()
    {
        this.Owner.Parent.Interactable.Activate(true);
    }

    //Sets the position of the door based on the current level of open-ness
    //For instance, if openLevel is 0.5 and the door is supposed to swing open by 90*, the door will be open by 45*
    function SetOpenPosition(openLevel : Real)
    {
        if (this.TypeOfDoor == OpenType.MoveRight)
        {
            this.Owner.Transform.Translation = this.StartingLocation + Real3(this.OpenDistance * openLevel, 0, 0);
        }
        else if (this.TypeOfDoor == OpenType.MoveLeft)
        {
            this.Owner.Transform.Translation = this.StartingLocation - Real3(this.OpenDistance * openLevel, 0, 0);
        }
        else if (this.TypeOfDoor == OpenType.SwingRight)
        {
            this.Owner.Transform.SetEulerAnglesXYZ(0, 0, openLevel * this.OpenAngle * Math.Pi / 180);
        }
        else if (this.TypeOfDoor == OpenType.SwingLeft)
        {
            this.Owner.Transform.SetEulerAnglesXYZ(0, 0, openLevel * this.OpenAngle * Math.Pi / -180);
        }
    }
}
